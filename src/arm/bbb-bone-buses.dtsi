/*
 * Copyright (C) 2020 Deepak Khatri <deepaklorkhatri7@gmail.com>
 * https://lorforlinux.github.io/GSoC2020_BeagleBoard.org/
 *
 * See Cape Interface Spec page for more info on Bone Buses
 * https://elinux.org/Beagleboard:BeagleBone_cape_interface_spec
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/board/am335x-bone-pins.h>
#include <dt-bindings/gpio/gpio.h>

/********/
/* LEDs */
/********/
&{/} {
	leds {
		pinctrl-names = "default";
		compatible = "gpio-leds";

		led_P8_03 {
			gpios = <gpio_P8_03 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_04 {
			gpios = <gpio_P8_04 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_05 {
			gpios = <gpio_P8_05 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_06 {
			gpios = <gpio_P8_06 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_07 {
			gpios = <gpio_P8_07 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_08 {
			gpios = <gpio_P8_08 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_09 {
			gpios = <gpio_P8_09 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_10 {
			gpios = <gpio_P8_10 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_11 {
			gpios = <gpio_P8_11 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_12 {
			gpios = <gpio_P8_12 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_13 {
			gpios = <gpio_P8_13 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_14 {
			gpios = <gpio_P8_14 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_15 {
			gpios = <gpio_P8_15 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_16 {
			gpios = <gpio_P8_16 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_17 {
			gpios = <gpio_P8_17 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_18 {
			gpios = <gpio_P8_18 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_19 {
			gpios = <gpio_P8_19 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_20 {
			gpios = <gpio_P8_20 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_21 {
			gpios = <gpio_P8_21 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_22 {
			gpios = <gpio_P8_22 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_23 {
			gpios = <gpio_P8_23 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_24 {
			gpios = <gpio_P8_24 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_25 {
			gpios = <gpio_P8_25 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_26 {
			gpios = <gpio_P8_26 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_27 {
			gpios = <gpio_P8_27 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_28 {
			gpios = <gpio_P8_28 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_29 {
			gpios = <gpio_P8_29 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_30 {
			gpios = <gpio_P8_30 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_31 {
			gpios = <gpio_P8_31 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_32 {
			gpios = <gpio_P8_32 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_33 {
			gpios = <gpio_P8_33 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_34 {
			gpios = <gpio_P8_34 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_35 {
			gpios = <gpio_P8_35 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_36 {
			gpios = <gpio_P8_36 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_37 {
			gpios = <gpio_P8_37 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_38 {
			gpios = <gpio_P8_38 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_39 {
			gpios = <gpio_P8_39 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_40 {
			gpios = <gpio_P8_40 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_41 {
			gpios = <gpio_P8_41 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_42 {
			gpios = <gpio_P8_42 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_43 {
			gpios = <gpio_P8_43 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_44 {
			gpios = <gpio_P8_44 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_45 {
			gpios = <gpio_P8_45 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P8_46 {
			gpios = <gpio_P8_46 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_11 {
			gpios = <gpio_P9_11 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_12 {
			gpios = <gpio_P9_12 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_13 {
			gpios = <gpio_P9_13 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_14 {
			gpios = <gpio_P9_14 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_15 {
			gpios = <gpio_P9_15 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_16 {
			gpios = <gpio_P9_16 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_17 {
			gpios = <gpio_P9_17 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_18 {
			gpios = <gpio_P9_18 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_19 {
			gpios = <gpio_P9_19 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_20 {
			gpios = <gpio_P9_20 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_21 {
			gpios = <gpio_P9_21 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_22 {
			gpios = <gpio_P9_22 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_23 {
			gpios = <gpio_P9_23 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_24 {
			gpios = <gpio_P9_24 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_25 {
			gpios = <gpio_P9_25 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_26 {
			gpios = <gpio_P9_26 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_27 {
			gpios = <gpio_P9_27 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_28 {
			gpios = <gpio_P9_28 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_29 {
			gpios = <gpio_P9_29 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_30 {
			gpios = <gpio_P9_30 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_31 {
			gpios = <gpio_P9_31 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_41 {
			gpios = <gpio_P9_41 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_91 {
			gpios = <gpio_P9_91 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_42 {
			gpios = <gpio_P9_42 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_P9_92 {
			gpios = <gpio_P9_92 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};

		led_A15 {
			gpios = <gpio_A15 GPIO_ACTIVE_HIGH>;
			status = "disabled";
		};
	};
};

// For dummy refrence when peripheral is not available.
&{/} {
	not_available: not_available {
		// Use &not_available when required.
		// This node is responsible to create these entries,
		// /sys/firmware/devicetree/base/__symbols__/not_available
		// /sys/firmware/devicetree/base/not_available
	};
};

// For compatible bone pinmuxing
bone_pinmux: &am33xx_pinmux {

};

// UARTs
bone_uart_1: &uart1 {
	symlink = "bone/uart/1";
};

bone_uart_2: &uart2 {
	symlink = "bone/uart/2";
};

bone_uart_3: &uart3 {
	symlink = "bone/uart/3";
};

bone_uart_4: &uart4 {
	symlink = "bone/uart/4";
};

bone_uart_5: &uart5 {
	symlink = "bone/uart/5";
};

// I2Cs 
bone_i2c_1: &i2c1 {
	symlink = "bone/i2c/1";
};

bone_i2c_2: &i2c2 {
	// Already in use for cape EEPROM reading.
	symlink = "bone/i2c/2";
};

// use only when bone_i2c_2 is not in use
bone_i2c_2a: &i2c2 {
	symlink = "bone/i2c/2a";
};

// use only when bone_i2c_1 is not in use
bone_i2c_3: &i2c1 {
	symlink = "bone/i2c/3";
};

// SPIs
bone_spi_0: &spi0 {

};

bone_spi_1: &spi1 {

};

// PWMs
bone_pwm_0: &ehrpwm0 {

};

bone_pwm_1: &ehrpwm1 {

};

bone_pwm_2: &ehrpwm2 {

};

// CAN
bone_can_0: &dcan0 {

};

bone_can_1: &dcan1 {

};

// PWM_TIMERs
bone_timer_0: &timer6 {
	
};

bone_timer_1: &timer4 {

};

bone_timer_2: &timer7 {

};

bone_timer_3: &not_available {
	// Not available on BBBWl/BBB
};

bone_timer_4: &timer5 {

};

bone_timer_5: &not_available {
	// Not available on BBBWL/BBB
};

// McASP
bone_mcasp_0: &mcasp0 {
    serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		2 0 1 0
		0 0 0 0
		0 0 0 0
		0 0 0 0
	>;
};

// eQEP
bone_eqep_0: &eqep0{

};

bone_eqep_1: &eqep1{

};

bone_eqep_2: &eqep2{

};

// ADC
bone_adc: &tscadc {
	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
		ti,chan-step-avg = <16 16 16 16 16 16 16 16>;
		ti,chan-step-opendelay = <0x98 0x98 0x98 0x98 0x98 0x98 0x98 0x98>;
		ti,chan-step-sampledelay = <0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0>;
	};
};

// Enable all pwmss
&epwmss0 {
	status = "okay";
};

&epwmss1 {
	status = "okay";
};

&epwmss2 {
	status = "okay";
};

// spi_gpio (bit banged SPI)
&{/} {
	// For CTAG SW 8ch overlay
	bone_spi_gpio_ad193x: bone_spi_gpio_ad193x {
		status = "disabled";
		compatible = "spi-gpio";
		#address-cells = <1>;
		#size-cells = <0>;

		sck-gpios = <gpio_P8_32 GPIO_ACTIVE_HIGH>;
		mosi-gpios = <gpio_P8_33 GPIO_ACTIVE_HIGH>;
		miso-gpios = <gpio_P8_14 GPIO_ACTIVE_HIGH>;
		cs-gpios = <gpio_P8_17 GPIO_ACTIVE_HIGH>;
		num-chipselects = <1>;

		ad193x: ad193x@0{
			compatible = "analog,ad1938";
			reset-gpio = <gpio_P8_34 GPIO_ACTIVE_HIGH>;
			reg = <0>; //corresponds to cs
			spi-max-frequency = <100000>;
		};
	};
};

// Bone sound
&ocp {
        clk_mcasp0_fixed: clk_mcasp0_fixed {
                #clock-cells = <0>;
                compatible = "fixed-clock";
                clock-frequeny = <24576000>;
        };
        clk_mcasp0: clk_mcasp0 {
                #clock-cells = <0>;
                compatible = "gpio-gate-clock";
                clocks = <&clk_mcasp0_fixed>;
                enable-gpios = <&gpio1 27 GPIO_ACTIVE_HIGH>;
        };
	bone_sound: bone_sound {
		bb-device = <0>; //BBB/BBG
	};
};

// eMMC
bone_emmc: &mmc2 {
	status = "disabled";
	vmmc-supply = <&vmmcsd_fixed>;
	bus-width = <8>;
};

// LCD
// AM33xx LCD Interface
&lcdc {
	status = "okay";
};

// Touch Controller
&bone_i2c_1 {
	status = "okay";
	clock-frequency = <100000>;
	#address-cells = <1>;
	#size-cells = <0>;

	// Bone Touch controller
	bone_polytouch_edt: edt-ft5x06@38 {
		status = "disabled";
		compatible = "edt,edt-ft5x06";
		reg = <0x38>;
		interrupt-parent = <&gpio0>;
		interrupts = <14 2>;
		touchscreen-size-y = <480>;
		touchscreen-size-x = <272>;
		touchscreen-swapped-x-y;
	};
};

&{/} {

	// Backlight(s)
	// Backlight on pin P9_14
	bone_backlight: backlight {
		status = "disabled";
		compatible = "pwm-backlight";
		pwms = <&bone_pwm_1 0 500000 0>;
		brightness-levels = <
			0  1  2  3  4  5  6  7  8  9
			10 11 12 13 14 15 16 17 18 19
			20 21 22 23 24 25 26 27 28 29
			30 31 32 33 34 35 36 37 38 39
			40 41 42 43 44 45 46 47 48 49
			50 51 52 53 54 55 56 57 58 59
			60 61 62 63 64 65 66 67 68 69
			70 71 72 73 74 75 76 77 78 79
			80 81 82 83 84 85 86 87 88 89
			90 91 92 93 94 95 96 97 98 99
			100
		>;
		default-brightness-level = <100>;
	};

	// Displays(s)
	// 4D Systems GEN4-4DCAPE-43CT-CLB Cape
	bone_lcd_4d4c: panel {
		status = "disabled";
		compatible = "ti,tilcdc,panel";
		backlight = <&bone_backlight>;

		panel-info {
			ac-bias           = <255>;
			ac-bias-intrpt    = <0>;
			dma-burst-sz      = <16>;
			bpp               = <16>;
			fdd               = <0x80>;
			sync-edge         = <0>;
			sync-ctrl         = <1>;
			raster-order      = <0>;
			fifo-th           = <0>;
		};
		
		display-timings {
			native-mode = <&timing0>;
			/* www.newhavendisplay.com/app_notes/OTA5180A.pdf */
			timing0: 480x272 {
				clock-frequency = <9200000>;
				hactive = <480>;
				vactive = <272>;
				hfront-porch = <8>;
				hback-porch = <47>;
				hsync-len = <41>;
				vback-porch = <2>;
				vfront-porch = <3>;
				vsync-len = <10>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};
		};
	};

	// Frame Buffer AM33XX
	fb {
		compatible = "ti,am33xx-tilcdc";
		reg = <0x4830e000 0x1000>;
		interrupt-parent = <&intc>;
		interrupts = <36>;
		ti,hwmods = "lcdc";
	};
};
// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (C) 2019 Texas Instruments Incorporated - https://www.ti.com/
 */

/dts-v1/;

#include "k3-j721e-som-p0.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/net/ti-dp83867.h>
#include <dt-bindings/board/k3-j721e-bone-pins.h>

/ {

	model = "BeagleBoard.org BeagleBone AI-64";
	compatible = "beagle,j721e-beagleboneai64", "ti,j721e";

	chosen {
		stdout-path = "serial2:115200n8";
		bootargs = "console=ttyS2,115200n8 earlycon=ns16550a,mmio32,0x02800000";
		base_dtb = "k3-j721e-beagleboneai64.dts";
		base_dtb_timestamp = __TIMESTAMP__;
	};

	gpio_keys: gpio-keys {
		compatible = "gpio-keys";
		autorepeat;
		pinctrl-names = "default";
		pinctrl-0 = <&sw_pwr_pins_default>;
		sw2: sw2 {
			label = "GPIO Key USER2";
			linux,code = <BTN_0>;
			gpios = <&wkup_gpio0 4 GPIO_ACTIVE_LOW>;
		};
	};

	gpio_leds: gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pins_default>;

		usr_led0: usr_led0 {
			label = "beaglebone:green:usr0";
			default-state = "keep";
			linux,default-trigger = "heartbeat";
			gpios = <&main_gpio0 96 GPIO_ACTIVE_HIGH>;
		};

		usr_led1: usr_led1 {
			label = "beaglebone:green:usr1";
			default-state = "keep";
			linux,default-trigger = "mmc0";
			gpios = <&main_gpio0 95 GPIO_ACTIVE_HIGH>;
		};

		usr_led2: usr_led2 {
			label = "beaglebone:green:usr2";
			linux,default-trigger = "cpu";
			gpios = <&main_gpio0 97 GPIO_ACTIVE_HIGH>;
		};

		usr_led3: usr_led3 {
			label = "beaglebone:green:usr3";
			linux,default-trigger = "mmc1";
			gpios = <&main_gpio0 110 GPIO_ACTIVE_HIGH>;
		};

		usr_led4: usr_led4 {
			label = "beaglebone:green:usr4";
			linux,default-trigger = "netdev";
			gpios = <&main_gpio0 109 GPIO_ACTIVE_HIGH>;
		};
	};

	/* Dummy driver to request setup for cape header pins */
	cape_header: pinmux_dummy {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <
			&P8_03_default_pin
			&P8_04_default_pin
			&P8_05_default_pin
			&P8_06_default_pin
			&P8_07_default_pin
			&P8_08_default_pin
			&P8_09_default_pin
			&P8_10_default_pin
			&P8_11_default_pin
			&P8_12_default_pin
			&P8_13_default_pin
			&P8_14_default_pin
			&P8_15_default_pin
			&P8_16_default_pin
			&P8_17_default_pin
			&P8_18_default_pin
			&P8_19_default_pin
			&P8_20_default_pin
			&P8_21_default_pin
			&P8_22_default_pin
			&P8_23_default_pin
			&P8_24_default_pin
			&P8_25_default_pin
			&P8_26_default_pin
			&P8_27_default_pin
			&P8_28_default_pin
			&P8_29_default_pin
			&P8_30_default_pin
			&P8_31_default_pin
			&P8_32_default_pin
			&P8_33_default_pin
			&P8_34_default_pin
			&P8_35_default_pin
			&P8_36_default_pin
			&P8_37_default_pin
			&P8_38_default_pin
			&P8_39_default_pin
			&P8_40_default_pin
			&P8_41_default_pin
			&P8_42_default_pin
			&P8_43_default_pin
			&P8_44_default_pin
			&P8_45_default_pin
			&P8_46_default_pin
			&P9_11_default_pin
			&P9_12_default_pin
			&P9_13_default_pin
			&P9_14_default_pin
			&P9_15_default_pin
			&P9_16_default_pin
			&P9_17_default_pin
			&P9_18_default_pin
			&P9_19_default_pin
			&P9_20_default_pin
			&P9_21_default_pin
			&P9_22_default_pin
			&P9_23_default_pin
			&P9_24_default_pin
			&P9_25_default_pin
			&P9_26_default_pin
			&P9_27_default_pin
			&P9_28_default_pin
			&P9_29_default_pin
			&P9_30_default_pin
			&P9_31_default_pin
			&P9_33_default_pin
			&P9_35_default_pin
			&P9_36_default_pin
			&P9_37_default_pin
			&P9_38_default_pin
			&P9_39_default_pin
			&P9_40_default_pin
			&P9_41_default_pin
			&P9_42_default_pin
		>;
#if 0
		pinctrl-0 = <
			&P8_03_pruout_pin
			&P8_04_pruout_pin
			&P8_05_pruout_pin
			&P8_06_pruout_pin
			&P8_07_pruout_pin
			&P8_08_pruout_pin
			&P8_09_pruout_pin
			&P8_10_pruout_pin
			&P8_11_pruout_pin
			&P8_12_pruout_pin
			&P8_13_pwm_pin
			&P8_14_pruout_pin
			&P8_15_pruout_pin
			&P8_16_pruout_pin
			&P8_17_pruout_pin
			&P8_18_pruout_pin
			&P8_19_pwm_pin
			&P8_20_pruout_pin
			&P8_21_pruout_pin
			&P8_22_pruout_pin
			&P8_23_pruout_pin
			&P8_24_pruout_pin
			&P8_25_pruout_pin
			&P8_26_pruout_pin
			&P8_27_pruout_pin
			&P8_28_pruout_pin
			&P8_29_pruout_pin
			&P8_30_pruout_pin
			&P8_31_pruout_pin
			&P8_32_pruout_pin
			&P8_33_pruout_pin
			&P8_34_pruout_pin
			&P8_35_pruout_pin
			&P8_36_pruout_pin
			&P8_37_pruout_pin
			&P8_38_pruout_pin
			&P8_39_pruout_pin
			&P8_40_pruout_pin
			&P8_41_pruout_pin
			&P8_42_pruout_pin
			&P8_43_pruout_pin
			&P8_44_pruout_pin
			&P8_45_pruout_pin
			&P8_46_pruout_pin
			&P9_11_pruout_pin
			&P9_12_pruout_pin
			&P9_13_pruout_pin
			&P9_14_pwm_pin
			&P9_15_pruout_pin
			&P9_16_pwm_pin
			&P9_17_pruout_pin
			&P9_18_pruout_pin
			&P9_19_pruout_pin
			&P9_20_pruout_pin
			&P9_21_pwm_pin
			&P9_22_pwm_pin
			&P9_23_pruout_pin
			&P9_24_pruout_pin
			&P9_25_gpio_pin
			&P9_26_pruout_pin
			&P9_27_pruout_pin
			&P9_28_pruout_pin
			&P9_29_pruout_pin
			&P9_30_pruout_pin
			&P9_31_pruout_pin
			&P9_33_pruout_pin
			&P9_35_pruout_pin
			&P9_36_pruout_pin
			&P9_37_pruout_pin
			&P9_38_pruout_pin
			&P9_39_pruout_pin
			&P9_40_pruout_pin
			&P9_41_pruout_pin
			&P9_42_pruout_pin
		>;
#endif
	};

	evm_12v0: fixedregulator-evm12v0 {
		/* main supply */
		compatible = "regulator-fixed";
		regulator-name = "evm_12v0";
		regulator-min-microvolt = <12000000>;
		regulator-max-microvolt = <12000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vsys_3v3: fixedregulator-vsys3v3 {
		/* Output of LMS140 */
		compatible = "regulator-fixed";
		regulator-name = "vsys_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&evm_12v0>;
		regulator-always-on;
		regulator-boot-on;
	};

	vsys_5v0: fixedregulator-vsys5v0 {
		/* Output of LM5140 */
		compatible = "regulator-fixed";
		regulator-name = "vsys_5v0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		vin-supply = <&evm_12v0>;
		regulator-always-on;
		regulator-boot-on;
	};

	vdd_mmc1: fixedregulator-sd {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&sd_pwr_en_pins_default>;
		regulator-name = "vdd_mmc1";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		enable-active-high;
		vin-supply = <&vsys_3v3>;
		gpios = <&main_gpio0 82 GPIO_ACTIVE_HIGH>;
	};

	vdd_sd_dv_alt: gpio-regulator-TLV71033 {
		compatible = "regulator-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&vdd_sd_dv_alt_pins_default>;
		regulator-name = "tlv71033";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		vin-supply = <&vsys_5v0>;
		gpios = <&main_gpio0 117 GPIO_ACTIVE_HIGH>;
		states = <1800000 0x0>,
			 <3300000 0x1>;
	};

	cpsw9g_virt_mac: main_r5fss_cpsw9g_virt_mac0 {
		compatible = "ti,j721e-cpsw-virt-mac";
		dma-coherent;
		ti,psil-base = <0x4a00>;
		ti,remote-name = "mpu_1_0_ethswitch-device-0";

		dmas = <&main_udmap 0xca00>,
		       <&main_udmap 0xca01>,
		       <&main_udmap 0xca02>,
		       <&main_udmap 0xca03>,
		       <&main_udmap 0xca04>,
		       <&main_udmap 0xca05>,
		       <&main_udmap 0xca06>,
		       <&main_udmap 0xca07>,
		       <&main_udmap 0x4a00>;
		dma-names = "tx0", "tx1", "tx2", "tx3",
			    "tx4", "tx5", "tx6", "tx7",
			    "rx";

		virt_emac_port {
			ti,label = "virt-port";
			/* local-mac-address = [0 0 0 0 0 0]; */
		};
	};

	transceiver1: can-phy@0 {
		status = "disabled";
	};

	transceiver2: can-phy@1 {
		status = "disabled";
	};

	dp_pwr_3v3: fixedregulator-dp-prw {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&dp0_3v3_en_pins_default>;
		regulator-name = "dp-pwr";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpios = <&main_gpio0 49 GPIO_ACTIVE_HIGH>; /* DP0_PWR_SW_EN */
		enable-active-high;

		/* Always on for now, until dp-connector driver can handle this */
		regulator-always-on;
	};

	dp0: connector {
		compatible = "dp-connector";
		label = "DP0";
		type = "full-size";
		dp-pwr-supply = <&dp_pwr_3v3>;

		port {
			dp_connector_in: endpoint {
				remote-endpoint = <&dp0_out>;
			};
		};
	};

	clk_ov5640_fixed: ov5640-xclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <25000000>;
	};
};

&main_pmx0 {
	led_pins_default: led-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x184, PIN_INPUT, 7) /* (T23) RGMII5_RD0.GPIO0_96 */
			J721E_IOPAD(0x180, PIN_INPUT, 7) /* (R23) RGMII5_RD1.GPIO0_95 */
			J721E_IOPAD(0x188, PIN_INPUT, 7) /* (Y28) RGMII6_TX_CTL.GPIO0_97 */
			J721E_IOPAD(0x1bc, PIN_INPUT, 7) /* (V24) MDIO0_MDC.GPIO0_110 */
			J721E_IOPAD(0x1b8, PIN_INPUT, 7) /* (V26) MDIO0_MDIO.GPIO0_109 */
		>;
	};

	main_mmc1_pins_default: main-mmc1-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x254, PIN_INPUT, 0) /* (R29) MMC1_CMD */
			J721E_IOPAD(0x250, PIN_INPUT, 0) /* (P25) MMC1_CLK */
			J721E_IOPAD(0x2ac, PIN_INPUT, 0) /* (P25) MMC1_CLKLB */
			J721E_IOPAD(0x24c, PIN_INPUT, 0) /* (R24) MMC1_DAT0 */
			J721E_IOPAD(0x248, PIN_INPUT, 0) /* (P24) MMC1_DAT1 */
			J721E_IOPAD(0x244, PIN_INPUT, 0) /* (R25) MMC1_DAT2 */
			J721E_IOPAD(0x240, PIN_INPUT, 0) /* (R26) MMC1_DAT3 */
			J721E_IOPAD(0x258, PIN_INPUT, 0) /* (P23) MMC1_SDCD */
		>;
	};

	sd_pwr_en_pins_default: sd-pwr-en-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x14c, PIN_INPUT, 7) /* (AA29) PRG0_PRU1_GPO19.GPIO0_82 */
		>;
	};

	vdd_sd_dv_alt_pins_default: vdd-sd-dv-alt-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x1d8, PIN_INPUT, 7) /* (W4) SPI1_CS1.GPIO0_117 */
		>;
	};

	main_usbss0_pins_default: main-usbss0-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x210, PIN_INPUT, 7) /* (W3) MCAN1_RX.GPIO1_3 - USBC_DIR */
		>;
	};

	tusb322_pins_default: tusb322-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x214, PIN_INPUT, 7) /* (V4) MCAN1_TX.GPIO1_4 -- USBC_INT */
		>;
	};

	main_usbss1_pins_default: main-usbss1-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x290, PIN_OUTPUT, 1) /* (U6) USB0_DRVVBUS.USB1_DRVVBUS */
		>;
	};

	dp0_3v3_en_pins_default:dp0-3v3-en-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0xc8, PIN_INPUT, 7) /* (AE26) PRG0_PRU0_GPO6.GPIO0_49 */
		>;
	};

	dp0_pins_default: dp0-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x1c4, PIN_INPUT, 5) /* (Y4) SPI0_CS1.DP0_HPD */
		>;
	};

	main_i2c0_pins_default: main-i2c0-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x220, PIN_INPUT_PULLUP, 0) /* (AC5) I2C0_SCL */
			J721E_IOPAD(0x224, PIN_INPUT_PULLUP, 0) /* (AA5) I2C0_SDA */
		>;
	};

	main_i2c1_pins_default: main-i2c1-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x228, PIN_INPUT_PULLUP, 0) /* (Y6) I2C1_SCL */
			J721E_IOPAD(0x22c, PIN_INPUT_PULLUP, 0) /* (AA6) I2C1_SDA */
		>;
	};

	main_i2c3_pins_default: main-i2c3-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x270, PIN_INPUT_PULLUP, 4) /* (T26) MMC2_CLK.I2C3_SCL */
			J721E_IOPAD(0x274, PIN_INPUT_PULLUP, 4) /* (T25) MMC2_CMD.I2C3_SDA */
		>;
	};

	main_i2c5_pins_default: main-i2c5-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x150, PIN_INPUT_PULLUP, 2) /* (Y26) PRG0_MDIO0_MDIO.I2C5_SCL */
			J721E_IOPAD(0x154, PIN_INPUT_PULLUP, 2) /* (AA27) PRG0_MDIO0_MDC.I2C5_SDA */
		>;
	};

	main_spi6_pins_default: main-spi6-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x74, PIN_OUTPUT, 4) /* (AC21) PRG1_PRU1_GPO7.SPI6_CS0 */
			J721E_IOPAD(0x28, PIN_OUTPUT, 4) /* (AG20) PRG1_PRU0_GPO9.SPI6_CS1 */
			J721E_IOPAD(0x9c, PIN_OUTPUT, 4) /* (AC22) PRG1_PRU1_GPO17.SPI6_CLK */
			J721E_IOPAD(0xa0, PIN_OUTPUT, 4) /* (AJ22) PRG1_PRU1_GPO18.SPI6_D0 */
			J721E_IOPAD(0xa4, PIN_INPUT, 4) /* (AH22) PRG1_PRU1_GPO19.SPI6_D1 */
		>;
	};

	csi0_gpio_pins_default: csi0-gpio-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x19c, PIN_INPUT_PULLDOWN, 7) /* (W27) RGMII6_TD0.GPIO0_102 */
			J721E_IOPAD(0x1a0, PIN_INPUT_PULLDOWN, 7) /* (W29) RGMII6_TXC.GPIO0_103 */
		>;
	};

	csi1_gpio_pins_default: csi1-gpio-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x198, PIN_INPUT_PULLDOWN, 7) /* (V25) RGMII6_TD1.GPIO0_101 */
			J721E_IOPAD(0x1b0, PIN_INPUT_PULLDOWN, 7) /* (W24) RGMII6_RD1.GPIO0_107 */
		>;
	};

/* macro: BONE_PIN( <pin>, <mode_name>, <register_value_macro(s)> */
#define BONE_PIN(XX,ZZ,QQ) \
	XX##_##ZZ##_pin: pinmux_##XX##_##ZZ##_pin { pinctrl-single,pins = < QQ >; };

	/* Full P8/P9 header mode definitions */
	/* P8_01 - GND */
	/* P8_02 - GND */
	BONE_PIN(P8_03, default,   P8_03(PIN_INPUT, 7))
	BONE_PIN(P8_03, pruout,    P8_03(PIN_OUTPUT, 0))
	BONE_PIN(P8_03, pruin,     P8_03(PIN_INPUT, 1))
	BONE_PIN(P8_03, can,       P8_03(PIN_OUTPUT, 6))
	BONE_PIN(P8_03, gpio,      P8_03(PIN_OUTPUT, 7))
	BONE_PIN(P8_03, gpio_pu,   P8_03(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_03, gpio_pd,   P8_03(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_04, default,   P8_04(PIN_INPUT, 7))
	BONE_PIN(P8_04, pruout,    P8_04(PIN_OUTPUT, 0))
	BONE_PIN(P8_04, pruin,     P8_04(PIN_INPUT, 1))
	BONE_PIN(P8_04, gpio,      P8_04(PIN_OUTPUT, 7))
	BONE_PIN(P8_04, gpio_pu,   P8_04(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_04, gpio_pd,   P8_04(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_05, default,   P8_05(PIN_INPUT, 7))
	BONE_PIN(P8_05, pruout,    P8_05(PIN_OUTPUT, 0))
	BONE_PIN(P8_05, pruin,     P8_05(PIN_INPUT, 1))
	BONE_PIN(P8_05, gpio,      P8_05(PIN_OUTPUT, 7))
	BONE_PIN(P8_05, gpio_pu,   P8_05(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_05, gpio_pd,   P8_05(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_06, default,   P8_06(PIN_INPUT, 7))
	BONE_PIN(P8_06, pruout,    P8_06(PIN_OUTPUT, 0))
	BONE_PIN(P8_06, pruin,     P8_06(PIN_INPUT, 1))
	BONE_PIN(P8_06, gpio,      P8_06(PIN_OUTPUT, 7))
	BONE_PIN(P8_06, gpio_pu,   P8_06(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_06, gpio_pd,   P8_06(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_07, default,   P8_07(PIN_INPUT, 7))
	BONE_PIN(P8_07, pruout,    P8_07(PIN_OUTPUT, 0))
	BONE_PIN(P8_07, pruin,     P8_07(PIN_INPUT, 1))
	BONE_PIN(P8_07, gpio,      P8_07(PIN_OUTPUT, 7))
	BONE_PIN(P8_07, gpio_pu,   P8_07(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_07, gpio_pd,   P8_07(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_08, default,   P8_08(PIN_INPUT, 7))
	BONE_PIN(P8_08, pruout,    P8_08(PIN_OUTPUT, 0))
	BONE_PIN(P8_08, pruin,     P8_08(PIN_INPUT, 1))
	BONE_PIN(P8_08, gpio,      P8_08(PIN_OUTPUT, 7))
	BONE_PIN(P8_08, gpio_pu,   P8_08(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_08, gpio_pd,   P8_08(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_09, default,   P8_09(PIN_INPUT, 7))
	BONE_PIN(P8_09, pruout,    P8_09(PIN_OUTPUT, 0))
	BONE_PIN(P8_09, pruin,     P8_09(PIN_INPUT, 1))
	BONE_PIN(P8_09, gpio,      P8_09(PIN_OUTPUT, 7))
	BONE_PIN(P8_09, gpio_pu,   P8_09(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_09, gpio_pd,   P8_09(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_10, default,   P8_10(PIN_INPUT, 7))
	BONE_PIN(P8_10, pruout,    P8_10(PIN_OUTPUT, 0))
	BONE_PIN(P8_10, pruin,     P8_10(PIN_INPUT, 1))
	BONE_PIN(P8_10, gpio,      P8_10(PIN_OUTPUT, 7))
	BONE_PIN(P8_10, gpio_pu,   P8_10(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_10, gpio_pd,   P8_10(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_11, default,   P8_11(PIN_INPUT, 7))
	BONE_PIN(P8_11, pruout,    P8_11(PIN_OUTPUT, 0))
	BONE_PIN(P8_11, pruin,     P8_11(PIN_INPUT, 1))
	BONE_PIN(P8_11, gpio,      P8_11(PIN_OUTPUT, 7))
	BONE_PIN(P8_11, gpio_pu,   P8_11(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_11, gpio_pd,   P8_11(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_12, default,   P8_12(PIN_INPUT, 7))
	BONE_PIN(P8_12, pruout,    P8_12(PIN_OUTPUT, 0))
	BONE_PIN(P8_12, pruin,     P8_12(PIN_INPUT, 1))
	BONE_PIN(P8_12, gpio,      P8_12(PIN_OUTPUT, 7))
	BONE_PIN(P8_12, gpio_pu,   P8_12(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_12, gpio_pd,   P8_12(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_13, default,   P8_13(PIN_INPUT, 7))
	//BONE_PIN(P8_13, i2c,       P8_13(PIN_OUTPUT, 2)) /* I2C3_SCL */
	BONE_PIN(P8_13, pwm,       P8_13(PIN_OUTPUT, 6))
	BONE_PIN(P8_13, gpio,      P8_13(PIN_OUTPUT, 7))
	BONE_PIN(P8_13, gpio_pu,   P8_13(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_13, gpio_pd,   P8_13(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_14, default,   P8_14(PIN_INPUT, 7))
	BONE_PIN(P8_14, pruout,    P8_14(PIN_OUTPUT, 0))
	BONE_PIN(P8_14, pruin,     P8_14(PIN_INPUT, 1))
	BONE_PIN(P8_14, gpio,      P8_14(PIN_OUTPUT, 7))
	BONE_PIN(P8_14, gpio_pu,   P8_14(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_14, gpio_pd,   P8_14(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_15, default,   P8_15(PIN_INPUT, 7))
	BONE_PIN(P8_15, pruout,    P8_15(PIN_OUTPUT, 0))
	BONE_PIN(P8_15, pruin,     P8_15(PIN_INPUT, 1))
	BONE_PIN(P8_15, gpio,      P8_15(PIN_OUTPUT, 7))
	BONE_PIN(P8_15, gpio_pu,   P8_15(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_15, gpio_pd,   P8_15(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_16, default,   P8_16(PIN_INPUT, 7))
	BONE_PIN(P8_16, pruout,    P8_16(PIN_OUTPUT, 0))
	BONE_PIN(P8_16, pruin,     P8_16(PIN_INPUT, 1))
	BONE_PIN(P8_16, gpio,      P8_16(PIN_OUTPUT, 7))
	BONE_PIN(P8_16, gpio_pu,   P8_16(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_16, gpio_pd,   P8_16(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_17, default,   P8_17(PIN_INPUT, 7))
	BONE_PIN(P8_17, pruout,    P8_17(PIN_OUTPUT, 0))
	BONE_PIN(P8_17, pruin,     P8_17(PIN_INPUT, 1))
	BONE_PIN(P8_17, gpio,      P8_17(PIN_OUTPUT, 7))
	BONE_PIN(P8_17, gpio_pu,   P8_17(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_17, gpio_pd,   P8_17(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_18, default,   P8_18(PIN_INPUT, 7))
	BONE_PIN(P8_18, pruout,    P8_18(PIN_OUTPUT, 0))
	BONE_PIN(P8_18, pruin,     P8_18(PIN_INPUT, 1))
	BONE_PIN(P8_18, gpio,      P8_18(PIN_OUTPUT, 7))
	BONE_PIN(P8_18, gpio_pu,   P8_18(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_18, gpio_pd,   P8_18(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_19, default,   P8_19(PIN_INPUT, 7))
	BONE_PIN(P8_19, pwm,       P8_19(PIN_OUTPUT, 6))
	BONE_PIN(P8_19, gpio,      P8_19(PIN_OUTPUT, 7))
	BONE_PIN(P8_19, gpio_pu,   P8_19(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_19, gpio_pd,   P8_19(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_20, default,   P8_20(PIN_INPUT, 7))
	BONE_PIN(P8_20, pruout,    P8_20(PIN_OUTPUT, 0))
	BONE_PIN(P8_20, pruin,     P8_20(PIN_INPUT, 1))
	BONE_PIN(P8_20, gpio,      P8_20(PIN_OUTPUT, 7))
	BONE_PIN(P8_20, gpio_pu,   P8_20(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_20, gpio_pd,   P8_20(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_21, default,   P8_21(PIN_INPUT, 7))
	BONE_PIN(P8_21, pruout,    P8_21(PIN_OUTPUT, 0))
	BONE_PIN(P8_21, pruin,     P8_21(PIN_INPUT, 1))
	BONE_PIN(P8_21, pruuart,   P8_21(PIN_INPUT, 2))
	BONE_PIN(P8_21, gpio,      P8_21(PIN_OUTPUT, 7))
	BONE_PIN(P8_21, gpio_pu,   P8_21(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_21, gpio_pd,   P8_21(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_22, default,   P8_22(PIN_INPUT, 7))
	BONE_PIN(P8_22, pruout,    P8_22(PIN_OUTPUT, 0))
	BONE_PIN(P8_22, pruin,     P8_22(PIN_INPUT, 1))
	BONE_PIN(P8_22, gpio,      P8_22(PIN_OUTPUT, 7))
	BONE_PIN(P8_22, gpio_pu,   P8_22(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_22, gpio_pd,   P8_22(PIN_OUTPUT_PULLDOWN, 7))
	BONE_PIN(P8_22, uart,      P8_22(PIN_INPUT, 14)) /* UART2_RX */

	BONE_PIN(P8_23, default,   P8_23(PIN_INPUT, 7))
	BONE_PIN(P8_23, pruout,    P8_23(PIN_OUTPUT, 0))
	BONE_PIN(P8_23, pruin,     P8_23(PIN_INPUT, 1))
	BONE_PIN(P8_23, pruuart,   P8_23(PIN_OUTPUT, 2))
	BONE_PIN(P8_23, gpio,      P8_23(PIN_OUTPUT, 7))
	BONE_PIN(P8_23, gpio_pu,   P8_23(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_23, gpio_pd,   P8_23(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_24, default,   P8_24(PIN_INPUT, 7))
	BONE_PIN(P8_24, pruout,    P8_24(PIN_OUTPUT, 0))
	BONE_PIN(P8_24, pruin,     P8_24(PIN_INPUT, 1))
	BONE_PIN(P8_24, gpio,      P8_24(PIN_OUTPUT, 7))
	BONE_PIN(P8_24, gpio_pu,   P8_24(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_24, gpio_pd,   P8_24(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_25, default,   P8_25(PIN_INPUT, 7))
	BONE_PIN(P8_25, pruout,    P8_25(PIN_OUTPUT, 0))
	BONE_PIN(P8_25, pruin,     P8_25(PIN_INPUT, 1))
	BONE_PIN(P8_25, gpio,      P8_25(PIN_OUTPUT, 7))
	BONE_PIN(P8_25, gpio_pu,   P8_25(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_25, gpio_pd,   P8_25(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_26, default,   P8_26(PIN_INPUT, 7))
	BONE_PIN(P8_26, pruout,    P8_26(PIN_OUTPUT, 0))
	BONE_PIN(P8_26, pruin,     P8_26(PIN_INPUT, 1))
	BONE_PIN(P8_26, gpio,      P8_26(PIN_OUTPUT, 7))
	BONE_PIN(P8_26, gpio_pu,   P8_26(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_26, gpio_pd,   P8_26(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_27, default,   P8_27(PIN_INPUT, 7))
	BONE_PIN(P8_27, pruout,    P8_27(PIN_OUTPUT, 0))
	BONE_PIN(P8_27, pruin,     P8_27(PIN_INPUT, 1))
	BONE_PIN(P8_27, can,       P8_27(PIN_OUTPUT, 6))
	BONE_PIN(P8_27, gpio,      P8_27(PIN_OUTPUT, 7))
	BONE_PIN(P8_27, gpio_pu,   P8_27(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_27, gpio_pd,   P8_27(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_28, default,   P8_28(PIN_INPUT, 7))
	BONE_PIN(P8_28, pruout,    P8_28(PIN_OUTPUT, 0))
	BONE_PIN(P8_28, pruin,     P8_28(PIN_INPUT, 1))
	BONE_PIN(P8_28, gpio,      P8_28(PIN_OUTPUT, 7))
	BONE_PIN(P8_28, gpio_pu,   P8_28(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_28, gpio_pd,   P8_28(PIN_OUTPUT_PULLDOWN, 7))
	BONE_PIN(P8_28, uart,      P8_28(PIN_INPUT, 14)) /* UART8_RX */

	BONE_PIN(P8_29, default,   P8_29(PIN_INPUT, 7))
	BONE_PIN(P8_29, pruout,    P8_29(PIN_OUTPUT, 0))
	BONE_PIN(P8_29, pruin,     P8_29(PIN_INPUT, 1))
	BONE_PIN(P8_29, gpio,      P8_29(PIN_OUTPUT, 7))
	BONE_PIN(P8_29, gpio_pu,   P8_29(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_29, gpio_pd,   P8_29(PIN_OUTPUT_PULLDOWN, 7))
	BONE_PIN(P8_29, uart,      P8_29(PIN_OUTPUT, 14)) /* UART8_TX */

	BONE_PIN(P8_30, default,   P8_30(PIN_INPUT, 7))
	BONE_PIN(P8_30, pruout,    P8_30(PIN_OUTPUT, 0))
	BONE_PIN(P8_30, pruin,     P8_30(PIN_INPUT, 1))
	BONE_PIN(P8_30, gpio,      P8_30(PIN_OUTPUT, 7))
	BONE_PIN(P8_30, gpio_pu,   P8_30(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_30, gpio_pd,   P8_30(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_31, default,   P8_31A(PIN_INPUT, 7) P8_31B(PIN_INPUT, 7))
	BONE_PIN(P8_31, pruout,    P8_31A(PIN_OUTPUT, 0) P8_31B(PIN_INPUT, 7))
	BONE_PIN(P8_31, pruin,     P8_31A(PIN_INPUT, 1) P8_31B(PIN_INPUT, 7))
	BONE_PIN(P8_31, gpio,      P8_31A(PIN_OUTPUT, 7) P8_31B(PIN_INPUT, 7))
	BONE_PIN(P8_31, gpio_pu,   P8_31A(PIN_OUTPUT_PULLUP, 7) P8_31B(PIN_INPUT, 7))
	BONE_PIN(P8_31, gpio_pd,   P8_31A(PIN_OUTPUT_PULLDOWN, 7) P8_31B(PIN_INPUT, 7))

	BONE_PIN(P8_32, default,   P8_32A(PIN_INPUT, 7) P8_32B(PIN_INPUT, 7))
	BONE_PIN(P8_32, pruout,    P8_32A(PIN_OUTPUT, 0) P8_32B(PIN_INPUT, 7))
	BONE_PIN(P8_32, pruin,     P8_32A(PIN_INPUT, 1) P8_32B(PIN_INPUT, 7))
	BONE_PIN(P8_32, gpio,      P8_32A(PIN_OUTPUT, 7) P8_32B(PIN_INPUT, 7))
	BONE_PIN(P8_32, gpio_pu,   P8_32A(PIN_OUTPUT_PULLUP, 7) P8_32B(PIN_INPUT, 7))
	BONE_PIN(P8_32, gpio_pd,   P8_32A(PIN_OUTPUT_PULLDOWN, 7) P8_32B(PIN_INPUT, 7))

	BONE_PIN(P8_33, default,   P8_33A(PIN_INPUT, 7) P8_33B(PIN_INPUT, 7))
	BONE_PIN(P8_33, pruout,    P8_33A(PIN_OUTPUT, 0) P8_33B(PIN_INPUT, 7))
	BONE_PIN(P8_33, pruin,     P8_33A(PIN_INPUT, 1) P8_33B(PIN_INPUT, 7))
	BONE_PIN(P8_33, gpio,      P8_33A(PIN_OUTPUT, 7) P8_33B(PIN_INPUT, 7))
	BONE_PIN(P8_33, gpio_pu,   P8_33A(PIN_OUTPUT_PULLUP, 7) P8_33B(PIN_INPUT, 7))
	BONE_PIN(P8_33, gpio_pd,   P8_33A(PIN_OUTPUT_PULLDOWN, 7) P8_33B(PIN_INPUT, 7))
	BONE_PIN(P8_33, qep,       P8_33A(PIN_INPUT, 9) P8_33B(PIN_INPUT, 7)) /* EQEP1_B */

	BONE_PIN(P8_34, default,   P8_34(PIN_INPUT, 7))
	BONE_PIN(P8_34, pruout,    P8_34(PIN_OUTPUT, 0))
	BONE_PIN(P8_34, pruin,     P8_34(PIN_INPUT, 1))
	BONE_PIN(P8_34, gpio,      P8_34(PIN_OUTPUT, 7))
	BONE_PIN(P8_34, gpio_pu,   P8_34(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_34, gpio_pd,   P8_34(PIN_OUTPUT_PULLDOWN, 7))
	BONE_PIN(P8_34, uart,      P8_34(PIN_OUTPUT, 14)) /* UART2_TX */

	BONE_PIN(P8_35, default,   P8_35A(PIN_INPUT, 7) P8_35B(PIN_INPUT, 7))
	BONE_PIN(P8_35, pruout,    P8_35A(PIN_OUTPUT, 0) P8_35B(PIN_INPUT, 7))
	BONE_PIN(P8_35, pruin,     P8_35A(PIN_INPUT, 1) P8_35B(PIN_INPUT, 7))
	BONE_PIN(P8_35, gpio,      P8_35A(PIN_OUTPUT, 7) P8_35B(PIN_INPUT, 7))
	BONE_PIN(P8_35, gpio_pu,   P8_35A(PIN_OUTPUT_PULLUP, 7) P8_35B(PIN_INPUT, 7))
	BONE_PIN(P8_35, gpio_pd,   P8_35A(PIN_OUTPUT_PULLDOWN, 7) P8_35B(PIN_INPUT, 7))
	BONE_PIN(P8_35, qep,       P8_35A(PIN_INPUT, 9) P8_35B(PIN_INPUT, 7)) /* EQEP1_A */

	BONE_PIN(P8_36, default,   P8_36(PIN_INPUT, 7))
	BONE_PIN(P8_36, pruout,    P8_36(PIN_OUTPUT, 0))
	BONE_PIN(P8_36, pruin,     P8_36(PIN_INPUT, 1))
	BONE_PIN(P8_36, can,       P8_36(PIN_OUTPUT, 6))
	BONE_PIN(P8_36, gpio,      P8_36(PIN_OUTPUT, 7))
	BONE_PIN(P8_36, gpio_pu,   P8_36(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_36, gpio_pd,   P8_36(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_37, default,   P8_37A(PIN_INPUT, 7) P8_37B(PIN_INPUT, 7))
	BONE_PIN(P8_37, pruout,    P8_37A(PIN_OUTPUT, 0) P8_37B(PIN_INPUT, 7))
	BONE_PIN(P8_37, pruin,     P8_37A(PIN_INPUT, 1) P8_37B(PIN_INPUT, 7))
	BONE_PIN(P8_37, gpio,      P8_37A(PIN_OUTPUT, 7) P8_37B(PIN_INPUT, 7))
	BONE_PIN(P8_37, gpio_pu,   P8_37A(PIN_OUTPUT_PULLUP, 7) P8_37B(PIN_INPUT, 7))
	BONE_PIN(P8_37, gpio_pd,   P8_37A(PIN_OUTPUT_PULLDOWN, 7) P8_37B(PIN_INPUT, 7))

	BONE_PIN(P8_38, default,   P8_38A(PIN_INPUT, 7) P8_38B(PIN_INPUT, 7))
	BONE_PIN(P8_38, pruout,    P8_38A(PIN_OUTPUT, 0) P8_38B(PIN_INPUT, 7))
	BONE_PIN(P8_38, pruin,     P8_38A(PIN_INPUT, 1) P8_38B(PIN_INPUT, 7))
	BONE_PIN(P8_38, gpio,      P8_38A(PIN_OUTPUT, 7) P8_38B(PIN_INPUT, 7))
	BONE_PIN(P8_38, gpio_pu,   P8_38A(PIN_OUTPUT_PULLUP, 7) P8_38B(PIN_INPUT, 7))
	BONE_PIN(P8_38, gpio_pd,   P8_38A(PIN_OUTPUT_PULLDOWN, 7) P8_38B(PIN_INPUT, 7))

	BONE_PIN(P8_39, default,   P8_39(PIN_INPUT, 7))
	BONE_PIN(P8_39, pruout,    P8_39(PIN_OUTPUT, 0))
	BONE_PIN(P8_39, pruin,     P8_39(PIN_INPUT, 1))
	BONE_PIN(P8_39, gpio,      P8_39(PIN_OUTPUT, 7))
	BONE_PIN(P8_39, gpio_pu,   P8_39(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_39, gpio_pd,   P8_39(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_40, default,   P8_40(PIN_INPUT, 7))
	BONE_PIN(P8_40, pruout,    P8_40(PIN_OUTPUT, 0))
	BONE_PIN(P8_40, pruin,     P8_40(PIN_INPUT, 1))
	BONE_PIN(P8_40, gpio,      P8_40(PIN_OUTPUT, 7))
	BONE_PIN(P8_40, gpio_pu,   P8_40(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_40, gpio_pd,   P8_40(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_41, default,   P8_41(PIN_INPUT, 7))
	BONE_PIN(P8_41, pruout,    P8_41(PIN_OUTPUT, 0))
	BONE_PIN(P8_41, pruin,     P8_41(PIN_INPUT, 1))
	BONE_PIN(P8_41, gpio,      P8_41(PIN_OUTPUT, 7))
	BONE_PIN(P8_41, gpio_pu,   P8_41(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_41, gpio_pd,   P8_41(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_42, default,   P8_42(PIN_INPUT, 7))
	BONE_PIN(P8_42, pruout,    P8_42(PIN_OUTPUT, 0))
	BONE_PIN(P8_42, pruin,     P8_42(PIN_INPUT, 1))
	BONE_PIN(P8_42, gpio,      P8_42(PIN_OUTPUT, 7))
	BONE_PIN(P8_42, gpio_pu,   P8_42(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_42, gpio_pd,   P8_42(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_43, default,   P8_43(PIN_INPUT, 7))
	BONE_PIN(P8_43, pruout,    P8_43(PIN_OUTPUT, 0))
	BONE_PIN(P8_43, pruin,     P8_43(PIN_INPUT, 1))
	BONE_PIN(P8_43, gpio,      P8_43(PIN_OUTPUT, 7))
	BONE_PIN(P8_43, gpio_pu,   P8_43(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_43, gpio_pd,   P8_43(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_44, default,   P8_44(PIN_INPUT, 7))
	BONE_PIN(P8_44, pruout,    P8_44(PIN_OUTPUT, 0))
	BONE_PIN(P8_44, pruin,     P8_44(PIN_INPUT, 1))
	BONE_PIN(P8_44, gpio,      P8_44(PIN_OUTPUT, 7))
	BONE_PIN(P8_44, gpio_pu,   P8_44(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_44, gpio_pd,   P8_44(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_45, default,   P8_45(PIN_INPUT, 7))
	BONE_PIN(P8_45, pruout,    P8_45(PIN_OUTPUT, 0))
	BONE_PIN(P8_45, pruin,     P8_45(PIN_INPUT, 1))
	BONE_PIN(P8_45, gpio,      P8_45(PIN_OUTPUT, 7))
	BONE_PIN(P8_45, gpio_pu,   P8_45(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_45, gpio_pd,   P8_45(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P8_46, default,   P8_46(PIN_INPUT, 7))
	BONE_PIN(P8_46, pruout,    P8_46(PIN_OUTPUT, 0))
	BONE_PIN(P8_46, pruin,     P8_46(PIN_INPUT, 1))
	BONE_PIN(P8_46, gpio,      P8_46(PIN_OUTPUT, 7))
	BONE_PIN(P8_46, gpio_pu,   P8_46(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P8_46, gpio_pd,   P8_46(PIN_OUTPUT_PULLDOWN, 7))

	/* Full P9 header mode definitions */
	/* P9_01 - GND */
	/* P9_02 - GND */
	/* P9_03 - VOUT_3V3 */
	/* P9_04 - VOUT_3V3 */
	/* P9_05 - VIN */
	/* P9_06 - VIN */
	/* P9_07 - VOUT_SYS */
	/* P9_08 - VOUT_SYS */
	/* P9_09 - RESET# */
	/* P9_10 - POWER# */

	BONE_PIN(P9_11, default,   P9_11(PIN_INPUT, 7))
	BONE_PIN(P9_11, pruout,    P9_11(PIN_OUTPUT, 0))
	BONE_PIN(P9_11, pruin,     P9_11(PIN_INPUT, 1))
	BONE_PIN(P9_11, gpio,      P9_11(PIN_OUTPUT, 7))
	BONE_PIN(P9_11, gpio_pu,   P9_11(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_11, gpio_pd,   P9_11(PIN_OUTPUT_PULLDOWN, 7))
	BONE_PIN(P9_11, uart,      P9_11(PIN_INPUT, 14))

	BONE_PIN(P9_12, default,   P9_12(PIN_INPUT, 7))
	BONE_PIN(P9_12, pruout,    P9_12(PIN_OUTPUT, 0))
	BONE_PIN(P9_12, pruin,     P9_12(PIN_INPUT, 1))
	BONE_PIN(P9_12, gpio,      P9_12(PIN_OUTPUT, 7))
	BONE_PIN(P9_12, gpio_pu,   P9_12(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_12, gpio_pd,   P9_12(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_13, default,   P9_13(PIN_INPUT, 7))
	BONE_PIN(P9_13, pruout,    P9_13(PIN_OUTPUT, 0))
	BONE_PIN(P9_13, pruin,     P9_13(PIN_INPUT, 1))
	BONE_PIN(P9_13, gpio,      P9_13(PIN_OUTPUT, 7))
	BONE_PIN(P9_13, gpio_pu,   P9_13(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_13, gpio_pd,   P9_13(PIN_OUTPUT_PULLDOWN, 7))
	BONE_PIN(P9_13, uart,      P9_13(PIN_OUTPUT, 14))

	BONE_PIN(P9_14, default,   P9_14(PIN_INPUT, 7))
	BONE_PIN(P9_14, uart,      P9_14(PIN_INPUT, 3))
	BONE_PIN(P9_14, pwm,       P9_14(PIN_OUTPUT, 6))
	BONE_PIN(P9_14, gpio,      P9_14(PIN_OUTPUT, 7))
	BONE_PIN(P9_14, gpio_pu,   P9_14(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_14, gpio_pd,   P9_14(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_15, default,   P9_15(PIN_INPUT, 7))
	BONE_PIN(P9_15, pruout,    P9_15(PIN_OUTPUT, 0))
	BONE_PIN(P9_15, pruin,     P9_15(PIN_INPUT, 1))
	BONE_PIN(P9_15, gpio,      P9_15(PIN_OUTPUT, 7))
	BONE_PIN(P9_15, gpio_pu,   P9_15(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_15, gpio_pd,   P9_15(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_16, default,   P9_16(PIN_INPUT, 7))
	BONE_PIN(P9_16, pruout,    P9_16(PIN_OUTPUT, 0))
	BONE_PIN(P9_16, pruin,     P9_16(PIN_INPUT, 1))
	BONE_PIN(P9_16, pwm,       P9_16(PIN_OUTPUT, 6))
	BONE_PIN(P9_16, gpio,      P9_16(PIN_OUTPUT, 7))
	BONE_PIN(P9_16, gpio_pu,   P9_16(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_16, gpio_pd,   P9_16(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_17, default,   P9_17A(PIN_INPUT, 7) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, pruout,    P9_17A(PIN_OUTPUT, 0) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, pruin,     P9_17A(PIN_INPUT, 1) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, spi,       P9_17A(PIN_OUTPUT, 4) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, can,       P9_17A(PIN_OUTPUT, 6) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, gpio,      P9_17A(PIN_OUTPUT, 7) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, gpio_pu,   P9_17A(PIN_OUTPUT_PULLUP, 7) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, gpio_pd,   P9_17A(PIN_OUTPUT_PULLDOWN, 7) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, uart,      P9_17A(PIN_OUTPUT, 14) P9_17B(PIN_INPUT, 7))
	BONE_PIN(P9_17, i2c,       P9_17A(PIN_INPUT, 7) P9_17B(PIN_OUTPUT, 2)) /* I2C6_SCL */

	BONE_PIN(P9_18, default,   P9_18A(PIN_INPUT, 7) P9_18B(PIN_INPUT, 7))
	BONE_PIN(P9_18, pruout,    P9_18A(PIN_OUTPUT, 0) P9_18B(PIN_INPUT, 7))
	BONE_PIN(P9_18, pruin,     P9_18A(PIN_INPUT, 1) P9_18B(PIN_INPUT, 7))
	BONE_PIN(P9_18, spi,       P9_18A(PIN_OUTPUT, 4) P9_18B(PIN_INPUT, 7)) /* SPI6_D1 */
	BONE_PIN(P9_18, gpio,      P9_18A(PIN_OUTPUT, 7) P9_18B(PIN_INPUT, 7))
	BONE_PIN(P9_18, gpio_pu,   P9_18A(PIN_OUTPUT_PULLUP, 7) P9_18B(PIN_INPUT, 7))
	BONE_PIN(P9_18, gpio_pd,   P9_18A(PIN_OUTPUT_PULLDOWN, 7) P9_18B(PIN_INPUT, 7))
	BONE_PIN(P9_18, i2c,       P9_18A(PIN_INPUT, 7) P9_18B(PIN_OUTPUT, 2)) /* I2C6_SDA */

	BONE_PIN(P9_19, default,   P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT, 7))
	BONE_PIN(P9_19, i2c,       P9_19A(PIN_OUTPUT_PULLUP, 2) P9_19B(PIN_INPUT, 7)) /* I2C2_SCL */
	BONE_PIN(P9_19, pruout,    P9_19A(PIN_INPUT, 7) P9_19B(PIN_OUTPUT, 0))
	BONE_PIN(P9_19, pruin,     P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT, 1))
	BONE_PIN(P9_19, gpio,      P9_19A(PIN_INPUT, 7) P9_19B(PIN_OUTPUT, 7))
	BONE_PIN(P9_19, gpio_pu,   P9_19A(PIN_INPUT, 7) P9_19B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_19, gpio_pd,   P9_19A(PIN_INPUT, 7) P9_19B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_20, default,   P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT, 7))
	BONE_PIN(P9_20, i2c,       P9_20A(PIN_OUTPUT_PULLUP, 2) P9_20B(PIN_INPUT, 7)) /* I2C2_SDA */
	BONE_PIN(P9_20, pruout,    P9_20A(PIN_INPUT, 7) P9_20B(PIN_OUTPUT, 0))
	BONE_PIN(P9_20, pruin,     P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT, 1))
	BONE_PIN(P9_20, gpio,      P9_20A(PIN_INPUT, 7) P9_20B(PIN_OUTPUT, 7))
	BONE_PIN(P9_20, gpio_pu,   P9_20A(PIN_INPUT, 7) P9_20B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_20, gpio_pd,   P9_20A(PIN_INPUT, 7) P9_20B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_21, default,   P9_21A(PIN_INPUT, 7) P9_21B(PIN_INPUT, 7))
	BONE_PIN(P9_21, pruout,    P9_21A(PIN_OUTPUT, 0) P9_21B(PIN_INPUT, 7))
	BONE_PIN(P9_21, pruin,     P9_21A(PIN_INPUT, 1) P9_21B(PIN_INPUT, 7))
	BONE_PIN(P9_21, spi,       P9_21A(PIN_OUTPUT, 4) P9_21B(PIN_INPUT, 7)) /* SPI6_D0 */
	BONE_PIN(P9_21, gpio,      P9_21A(PIN_OUTPUT, 7) P9_21B(PIN_INPUT, 7))
	BONE_PIN(P9_21, gpio_pu,   P9_21A(PIN_OUTPUT_PULLUP, 7) P9_21B(PIN_INPUT, 7))
	BONE_PIN(P9_21, gpio_pd,   P9_21A(PIN_OUTPUT_PULLDOWN, 7) P9_21B(PIN_INPUT, 7))
	/*BONE_PIN(P9_21, i2c,       P9_21A(PIN_INPUT, 7) P9_21B(PIN_OUTPUT_PULLUP, 2)) /* I2C3_SDA */
	BONE_PIN(P9_21, pwm,       P9_21A(PIN_INPUT, 7) P9_21B(PIN_OUTPUT, 6)) /* EHRPWM1_A */

	BONE_PIN(P9_22, default,   P9_22A(PIN_INPUT, 7) P9_22B(PIN_INPUT, 7))
	BONE_PIN(P9_22, pruout,    P9_22A(PIN_OUTPUT, 0) P9_22B(PIN_INPUT, 7))
	BONE_PIN(P9_22, pruin,     P9_22A(PIN_INPUT, 1) P9_22B(PIN_INPUT, 7))
	BONE_PIN(P9_22, spi,       P9_22A(PIN_OUTPUT, 4) P9_22B(PIN_INPUT, 7)) /* SPI6_CLK */
	BONE_PIN(P9_22, gpio,      P9_22A(PIN_OUTPUT, 7) P9_22B(PIN_INPUT, 7))
	BONE_PIN(P9_22, gpio_pu,   P9_22A(PIN_OUTPUT_PULLUP, 7) P9_22B(PIN_INPUT, 7))
	BONE_PIN(P9_22, gpio_pd,   P9_22A(PIN_OUTPUT_PULLDOWN, 7) P9_22B(PIN_INPUT, 7))
	/*BONE_PIN(P9_22, i2c,       P9_22A(PIN_INPUT, 7) P9_22B(PIN_OUTPUT_PULLUP, 2)) /* I2C6_SDA */
	BONE_PIN(P9_22, pwm,       P9_22A(PIN_INPUT, 7) P9_22B(PIN_OUTPUT, 6)) /* EHRPWM1_B */

	BONE_PIN(P9_23, default,   P9_23(PIN_INPUT, 7))
	BONE_PIN(P9_23, pruout,    P9_23(PIN_OUTPUT, 0))
	BONE_PIN(P9_23, pruin,     P9_23(PIN_INPUT, 1))
	BONE_PIN(P9_23, spi,       P9_23(PIN_OUTPUT, 4)) /* SPI6_CS1 */
	BONE_PIN(P9_23, gpio,      P9_23(PIN_OUTPUT, 7))
	BONE_PIN(P9_23, gpio_pu,   P9_23(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_23, gpio_pd,   P9_23(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_24, default,   P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT, 7))
	BONE_PIN(P9_24, pruout,    P9_24A(PIN_INPUT, 7) P9_24B(PIN_OUTPUT, 0))
	BONE_PIN(P9_24, pruin,     P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT, 1))
	BONE_PIN(P9_24, gpio,      P9_24A(PIN_INPUT, 7) P9_24B(PIN_OUTPUT, 7))
	BONE_PIN(P9_24, gpio_pu,   P9_24A(PIN_INPUT, 7) P9_24B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_24, gpio_pd,   P9_24A(PIN_INPUT, 7) P9_24B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_25, default,   P9_25A(PIN_INPUT, 7) P9_25B(PIN_INPUT, 7))
	BONE_PIN(P9_25, can,       P9_25A(PIN_INPUT, 1) P9_25B(PIN_INPUT, 7))
	BONE_PIN(P9_25, pwm,       P9_25A(PIN_INPUT, 7) P9_25B(PIN_OUTPUT, 6)) /* EHRPWM4_B */
	BONE_PIN(P9_25, gpio,      P9_25A(PIN_OUTPUT, 7) P9_25B(PIN_INPUT, 7))
	BONE_PIN(P9_25, gpio_pu,   P9_25A(PIN_OUTPUT_PULLUP, 7) P9_25B(PIN_INPUT, 7))
	BONE_PIN(P9_25, gpio_pd,   P9_25A(PIN_OUTPUT_PULLDOWN, 7) P9_25B(PIN_INPUT, 7))

	BONE_PIN(P9_26, default,   P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT, 7))
	BONE_PIN(P9_26, pruout,    P9_26A(PIN_INPUT, 7) P9_26B(PIN_OUTPUT, 0))
	BONE_PIN(P9_26, pruin,     P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT, 1))
	BONE_PIN(P9_26, gpio,      P9_26A(PIN_INPUT, 7) P9_26B(PIN_OUTPUT, 7))
	BONE_PIN(P9_26, gpio_pu,   P9_26A(PIN_INPUT, 7) P9_26B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_26, gpio_pd,   P9_26A(PIN_INPUT, 7) P9_26B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_27, default,   P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT, 7))
	BONE_PIN(P9_27, pruout,    P9_27A(PIN_OUTPUT, 0) P9_27B(PIN_INPUT, 7))
	BONE_PIN(P9_27, pruin,     P9_27A(PIN_INPUT, 1) P9_27B(PIN_INPUT, 7))
	BONE_PIN(P9_27, qep,       P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT, 5)) /* EQEP0_B */
	BONE_PIN(P9_27, gpio,      P9_27A(PIN_INPUT, 7) P9_27B(PIN_OUTPUT, 7))
	BONE_PIN(P9_27, gpio_pu,   P9_27A(PIN_INPUT, 7) P9_27B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_27, gpio_pd,   P9_27A(PIN_INPUT, 7) P9_27B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_28, default,   P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT, 7))
	BONE_PIN(P9_28, pruout,    P9_28A(PIN_INPUT, 7) P9_28B(PIN_OUTPUT, 0))
	BONE_PIN(P9_28, pruin,     P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT, 1))
	BONE_PIN(P9_28, gpio,      P9_28A(PIN_INPUT, 7) P9_28B(PIN_OUTPUT, 7))
	BONE_PIN(P9_28, gpio_pu,   P9_28A(PIN_INPUT, 7) P9_28B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_28, gpio_pd,   P9_28A(PIN_INPUT, 7) P9_28B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_29, default,   P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT, 7))
	BONE_PIN(P9_29, pruout,    P9_29A(PIN_INPUT, 7) P9_29B(PIN_OUTPUT, 0))
	BONE_PIN(P9_29, pruin,     P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT, 1))
	BONE_PIN(P9_29, gpio,      P9_29A(PIN_INPUT, 7) P9_29B(PIN_OUTPUT, 7))
	BONE_PIN(P9_29, gpio_pu,   P9_29A(PIN_INPUT, 7) P9_29B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_29, gpio_pd,   P9_29A(PIN_INPUT, 7) P9_29B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_30, default,   P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT, 7))
	BONE_PIN(P9_30, pruout,    P9_30A(PIN_INPUT, 7) P9_30B(PIN_OUTPUT, 0))
	BONE_PIN(P9_30, pruin,     P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT, 1))
	BONE_PIN(P9_30, gpio,      P9_30A(PIN_INPUT, 7) P9_30B(PIN_OUTPUT, 7))
	BONE_PIN(P9_30, gpio_pu,   P9_30A(PIN_INPUT, 7) P9_30B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_30, gpio_pd,   P9_30A(PIN_INPUT, 7) P9_30B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_31, default,   P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT, 7))
	BONE_PIN(P9_31, pruout,    P9_31A(PIN_INPUT, 7) P9_31B(PIN_OUTPUT, 0))
	BONE_PIN(P9_31, pruin,     P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT, 1))
	BONE_PIN(P9_31, gpio,      P9_31A(PIN_INPUT, 7) P9_31B(PIN_OUTPUT, 7))
	BONE_PIN(P9_31, gpio_pu,   P9_31A(PIN_INPUT, 7) P9_31B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_31, gpio_pd,   P9_31A(PIN_INPUT, 7) P9_31B(PIN_OUTPUT_PULLDOWN, 7))

	/* P9_32 - ADC_REF_OUT */

	BONE_PIN(P9_33, default,   P9_33B(PIN_INPUT, 7))
	BONE_PIN(P9_33, pruout,    P9_33B(PIN_OUTPUT, 0))
	BONE_PIN(P9_33, pruin,     P9_33B(PIN_INPUT, 1))
	BONE_PIN(P9_33, gpio,      P9_33B(PIN_OUTPUT, 7))
	BONE_PIN(P9_33, gpio_pu,   P9_33B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_33, gpio_pd,   P9_33B(PIN_OUTPUT_PULLDOWN, 7))

	/* P9_34 - ADC_GND */

	BONE_PIN(P9_35, default,   P9_35B(PIN_INPUT, 7))
	BONE_PIN(P9_35, pruout,    P9_35B(PIN_OUTPUT, 0))
	BONE_PIN(P9_35, pruin,     P9_35B(PIN_INPUT, 1))
	BONE_PIN(P9_35, gpio,      P9_35B(PIN_OUTPUT, 7))
	BONE_PIN(P9_35, gpio_pu,   P9_35B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_35, gpio_pd,   P9_35B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_36, default,   P9_36B(PIN_INPUT, 7))
	BONE_PIN(P9_36, pruout,    P9_36B(PIN_OUTPUT, 0))
	BONE_PIN(P9_36, pruin,     P9_36B(PIN_INPUT, 1))
	BONE_PIN(P9_36, gpio,      P9_36B(PIN_OUTPUT, 7))
	BONE_PIN(P9_36, gpio_pu,   P9_36B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_36, gpio_pd,   P9_36B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_37, default,   P9_37B(PIN_INPUT, 7))
	BONE_PIN(P9_37, pruout,    P9_37B(PIN_OUTPUT, 0))
	BONE_PIN(P9_37, pruin,     P9_37B(PIN_INPUT, 1))
	BONE_PIN(P9_37, gpio,      P9_37B(PIN_OUTPUT, 7))
	BONE_PIN(P9_37, gpio_pu,   P9_37B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_37, gpio_pd,   P9_37B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_38, default,   P9_38B(PIN_INPUT, 7))
	BONE_PIN(P9_38, pruout,    P9_38B(PIN_OUTPUT, 0))
	BONE_PIN(P9_38, pruin,     P9_38B(PIN_INPUT, 1))
	BONE_PIN(P9_38, gpio,      P9_38B(PIN_OUTPUT, 7))
	BONE_PIN(P9_38, gpio_pu,   P9_38B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_38, gpio_pd,   P9_38B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_39, default,   P9_39B(PIN_INPUT, 7))
	BONE_PIN(P9_39, pruout,    P9_39B(PIN_OUTPUT, 0))
	BONE_PIN(P9_39, pruin,     P9_39B(PIN_INPUT, 1))
	BONE_PIN(P9_39, gpio,      P9_39B(PIN_OUTPUT, 7))
	BONE_PIN(P9_39, gpio_pu,   P9_39B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_39, gpio_pd,   P9_39B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_40, default,   P9_40B(PIN_INPUT, 7))
	BONE_PIN(P9_40, pruout,    P9_40B(PIN_OUTPUT, 0))
	BONE_PIN(P9_40, pruin,     P9_40B(PIN_INPUT, 1))
	BONE_PIN(P9_40, gpio,      P9_40B(PIN_OUTPUT, 7))
	BONE_PIN(P9_40, gpio_pu,   P9_40B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_40, gpio_pd,   P9_40B(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_41, default,   P9_41(PIN_INPUT, 7))
	BONE_PIN(P9_41, default,   P9_41(PIN_INPUT, 7))
	BONE_PIN(P9_41, pruout,    P9_41(PIN_OUTPUT, 0))
	BONE_PIN(P9_41, pruin,     P9_41(PIN_INPUT, 1))
	BONE_PIN(P9_41, gpio,      P9_41(PIN_OUTPUT, 7))
	BONE_PIN(P9_41, gpio_pu,   P9_41(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_41, gpio_pd,   P9_41(PIN_OUTPUT_PULLDOWN, 7))

	BONE_PIN(P9_42, default,   P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT, 7))
	BONE_PIN(P9_42, pruout,    P9_42A(PIN_INPUT, 7) P9_42B(PIN_OUTPUT, 0))
	BONE_PIN(P9_42, pruin,     P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT, 1))
	BONE_PIN(P9_42, qep,       P9_42A(PIN_INPUT, 5) P9_42B(PIN_INPUT, 7)) /* EQEP0_A */
	BONE_PIN(P9_42, gpio,      P9_42A(PIN_INPUT, 7) P9_42B(PIN_OUTPUT, 7))
	BONE_PIN(P9_42, gpio_pu,   P9_42A(PIN_INPUT, 7) P9_42B(PIN_OUTPUT_PULLUP, 7))
	BONE_PIN(P9_42, gpio_pd,   P9_42A(PIN_INPUT, 7) P9_42B(PIN_OUTPUT_PULLDOWN, 7))

	/* P9_43 - GND */
	/* P9_44 - GND */
	/* P9_45 - GND */
	/* P9_46 - GND */

	pcie1_rst_pins_default: pcie1-rst-pins-default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x5c, PIN_INPUT, 7) /* (AG23) PRG1_PRU1_GPO1.GPIO0_22 */
		>;
	};

	ehrpwm0_pins_default: ehrpwm0_pins_default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x164, PIN_OUTPUT, 6) /* (V29) RGMII5_TD2.EHRPWM0_A */
			J721E_IOPAD(0x168, PIN_OUTPUT, 6) /* (V27) RGMII5_TD1.EHRPWM0_B */
		>;
	};

	ehrpwm1_pins_default: ehrpwm1_pins_default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x16c, PIN_OUTPUT, 6) /* (U28) RGMII5_TD0.EHRPWM1_A */
			J721E_IOPAD(0x170, PIN_OUTPUT, 6) /* (U29) RGMII5_TXC.EHRPWM1_B */
		>;
	};

	ehrpwm2_pins_default: ehrpwm2_pins_default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x178, PIN_OUTPUT, 6) /* (U27) RGMII5_RD3.EHRPWM2_A */
			J721E_IOPAD(0x17c, PIN_OUTPUT, 6) /* (U24) RGMII5_RD2.EHRPWM2_B */
		>;
	};

	ehrpwm3_pins_default: ehrpwm3_pins_default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x18c, PIN_OUTPUT, 6) /* (V23) RGMII6_RX_CTL.EHRPWM3_A */
			J721E_IOPAD(0x190, PIN_OUTPUT, 6) /* (W23) RGMII6_TD3.EHRPWM3_B */
		>;
	};

	ehrpwm4_pins_default: ehrpwm4_pins_default {
		pinctrl-single,pins = <
/*			J721E_IOPAD(0x1a0, PIN_OUTPUT, 6)*/ /* (W29) RGMII6_TXC.EHRPWM4_A */
			J721E_IOPAD(0x1a4, PIN_OUTPUT, 6) /* (W26) RGMII6_RXC.EHRPWM4_B */
		>;
	};

	ehrpwm5_pins_default: ehrpwm5_pins_default {
		pinctrl-single,pins = <
			J721E_IOPAD(0x1ac, PIN_OUTPUT, 6) /* (Y27) RGMII6_RD2.EHRPWM5_A */
/*			J721E_IOPAD(0x1b0, PIN_OUTPUT, 6)*/ /* (W24) RGMII6_RD1.EHRPWM5_B */
		>;
	};
};

&wkup_pmx0 {
	wkup_i2c0_pins_default: wkup-i2c0-pins-default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0xf8, PIN_INPUT_PULLUP, 0) /* (J25) WKUP_I2C0_SCL */
			J721E_WKUP_IOPAD(0xfc, PIN_INPUT_PULLUP, 0) /* (H24) WKUP_I2C0_SDA */
		>;
	};

	eeprom_wp_pins_default: eeprom-wp-pins-default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0xc4, PIN_OUTPUT_PULLUP, 7) /* (G24) WKUP_GPIO0_5 */
		>;
	};

	mcu_adc0_pins_default: mcu_adc0_pins_default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0x130, PIN_INPUT, 0) /* (K25) MCU_ADC0_AIN0 */
			J721E_WKUP_IOPAD(0x134, PIN_INPUT, 0) /* (K26) MCU_ADC0_AIN1 */
			J721E_WKUP_IOPAD(0x138, PIN_INPUT, 0) /* (K28) MCU_ADC0_AIN2 */
			J721E_WKUP_IOPAD(0x13c, PIN_INPUT, 0) /* (L28) MCU_ADC0_AIN3 */
			J721E_WKUP_IOPAD(0x140, PIN_INPUT, 0) /* (K24) MCU_ADC0_AIN4 */
			J721E_WKUP_IOPAD(0x144, PIN_INPUT, 0) /* (K27) MCU_ADC0_AIN5 */
			J721E_WKUP_IOPAD(0x148, PIN_INPUT, 0) /* (K29) MCU_ADC0_AIN6 */
		>;
	};

	mcu_adc1_pins_default: mcu_adc1_pins_default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0x150, PIN_INPUT, 0) /* (N23) MCU_ADC1_AIN0 */
		>;
	};

	mikro_bus_pins_default: mikro-bus-pins-default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0x108, PIN_INPUT, 7) /* (E26) PMIC_POWER_EN0.WKUP_GPIO0_66 */
			J721E_WKUP_IOPAD(0xd4, PIN_INPUT, 7) /* (G26) WKUP_GPIO0_9 */
			J721E_WKUP_IOPAD(0xf4, PIN_INPUT, 7) /* (D25) MCU_I3C0_SDA.WKUP_GPIO0_61 */
			J721E_WKUP_IOPAD(0xd0, PIN_INPUT, 7) /* (G27) WKUP_GPIO0_8 */
			J721E_WKUP_IOPAD(0xf0, PIN_INPUT, 7) /* (D26) MCU_I3C0_SCL.WKUP_GPIO0_60 */

			J721E_WKUP_IOPAD(0xb8, PIN_INPUT, 7) /* (F28) WKUP_GPIO0_2 */
			J721E_WKUP_IOPAD(0xb4, PIN_INPUT, 7) /* (F25) WKUP_GPIO0_1 */
			J721E_WKUP_IOPAD(0xb0, PIN_INPUT, 7) /* (F26) WKUP_GPIO0_0 */
			J721E_WKUP_IOPAD(0xbc, PIN_INPUT, 7) /* (F27) WKUP_GPIO0_3 */

			J721E_WKUP_IOPAD(0x44, PIN_INPUT, 7) /* (G22) MCU_OSPI1_D1.WKUP_GPIO0_33 */
			J721E_WKUP_IOPAD(0x48, PIN_INPUT, 7) /* (D23) MCU_OSPI1_D2.WKUP_GPIO0_34 */

			J721E_WKUP_IOPAD(0x4c, PIN_INPUT, 7) /* (C23) MCU_OSPI1_D3.WKUP_GPIO0_35 */
			J721E_WKUP_IOPAD(0x54, PIN_INPUT, 7) /* (E22) MCU_OSPI1_CSn1.WKUP_GPIO0_37 */
			J721E_WKUP_IOPAD(0xdc, PIN_INPUT, 7) /* (H27) WKUP_GPIO0_11 */
			J721E_WKUP_IOPAD(0xac, PIN_INPUT, 7) /* (C29) MCU_MCAN0_RX.WKUP_GPIO0_59 */
		>;
	};

	sw_pwr_pins_default: sw-pwr-pins-default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0xc0, PIN_INPUT, 7) /* (G25) WKUP_GPIO0_4 */
		>;
	};

	mcu_cpsw_pins_default: mcu-cpsw-pins-default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0x84, PIN_INPUT, 0) /* (B24) MCU_RGMII1_RD0 */
			J721E_WKUP_IOPAD(0x80, PIN_INPUT, 0) /* (A24) MCU_RGMII1_RD1 */
			J721E_WKUP_IOPAD(0x7c, PIN_INPUT, 0) /* (D24) MCU_RGMII1_RD2 */
			J721E_WKUP_IOPAD(0x78, PIN_INPUT, 0) /* (A25) MCU_RGMII1_RD3 */
			J721E_WKUP_IOPAD(0x74, PIN_INPUT, 0) /* (C24) MCU_RGMII1_RXC */
			J721E_WKUP_IOPAD(0x5c, PIN_INPUT, 0) /* (C25) MCU_RGMII1_RX_CTL */
			J721E_WKUP_IOPAD(0x6c, PIN_OUTPUT, 0) /* (B25) MCU_RGMII1_TD0 */
			J721E_WKUP_IOPAD(0x68, PIN_OUTPUT, 0) /* (A26) MCU_RGMII1_TD1 */
			J721E_WKUP_IOPAD(0x64, PIN_OUTPUT, 0) /* (A27) MCU_RGMII1_TD2 */
			J721E_WKUP_IOPAD(0x60, PIN_OUTPUT, 0) /* (A28) MCU_RGMII1_TD3 */
			J721E_WKUP_IOPAD(0x70, PIN_OUTPUT, 0) /* (B26) MCU_RGMII1_TXC */
			J721E_WKUP_IOPAD(0x58, PIN_OUTPUT, 0) /* (B27) MCU_RGMII1_TX_CTL */
		>;
	};

	mcu_mdio_pins_default: mcu-mdio1-pins-default {
		pinctrl-single,pins = <
			J721E_WKUP_IOPAD(0x8c, PIN_OUTPUT, 0) /* (F23) MCU_MDIO0_MDC */
			J721E_WKUP_IOPAD(0x88, PIN_INPUT, 0) /* (E23) MCU_MDIO0_MDIO */
		>;
	};
};

&wkup_uart0 {
	/* Wakeup UART is used by System firmware */
	status = "reserved";
};

bone_uart_0: &main_uart0 {
	symlink = "bone/uart/0";
	power-domains = <&k3_pds 146 TI_SCI_PD_SHARED>;
};

&main_uart3 {
	/* UART not brought out */
	status = "disabled";
};

&main_uart5 {
	/* UART not brought out */
	status = "disabled";
};

&main_uart6 {
	/* UART not brought out */
	status = "disabled";
};

&main_uart7 {
	/* UART not brought out */
	status = "disabled";
};

&main_uart8 {
	/* UART not brought out */
	status = "disabled";
};

&main_uart9 {
	/* UART not brought out */
	status = "disabled";
};

&main_gpio0 {
	status = "okay";
	gpio-line-names = "", "P9_11", "P9_13", "P8_17", "P8_18", /* 0-4 */
		"P8_22", "P8_24", "P8_34", "P8_36", "P8_38A", /* 5-9 */
		"P9_23", "P8_37A", "P9_26B", "P9_24B", "P8_08", /* 10-14 */
		"P8_07", "P8_10", "P8_09", "P9_42B", "", /* 15-19 */
		"P8_03", "", "", "", "P8_35A", /* 20-24 */
		"P8_33A", "P8_32A", "", "P9_17A", "", /* 25-29 */
		"P8_21", "P8_23", "P8_31A", "P8_05", "P8_06", /* 30-34 */
		"P8_25", "", "", "P9_22A (BOOTMODE1)", "", /* 35-39 */
		"", "", "", "", "", /* 40-44 */
		"", "", "", "", "", /* 45-49 */
		"", "", "", "", "", /* 50-54 */
		"", "", "", "", "", /* 55-59 */
		"", "", "", "", "", /* 60-64 */
		"", "", "", "", "", /* 65-69 */
		"", "", "", "", "", /* 70-74 */
		"", "", "", "", "", /* 75-79 */
		"", "", "", "", "", /* 80-84 */
		"", "", "", "", "", /* 85-89 */
		"", "", "", "", "", /* 90-94 */
		"", "", "", "", "", /* 95-99 */
		"", "", "", "", "", /* 100-104 */
		"", "", "", "", "", /* 105-109 */
		"", "", "", "", "", /* 110-114 */
		"", "", "", "", "", /* 115-119 */
		"", "", "", "", "", /* 120-124 */
		"", "", ""; /* 125-127 */
};

&main_gpio1 {
	status = "okay";
};

&main_gpio2 {
	status = "disabled";
};

&main_gpio3 {
	status = "disabled";
};

&main_gpio4 {
	status = "disabled";
};

&main_gpio5 {
	status = "disabled";
};

&main_gpio6 {
	status = "disabled";
};

&main_gpio7 {
	status = "disabled";
};

&wkup_gpio0 {
	pinctrl-names = "default";
	pinctrl-0 = <&mcu_adc0_pins_default &mcu_adc1_pins_default &mikro_bus_pins_default>;
};

&wkup_gpio1 {
	status = "disabled";
};

&main_sdhci0 {
	/* eMMC */
	non-removable;
	ti,driver-strength-ohm = <50>;
	disable-wp;
};

&main_sdhci1 {
	/* SD/MMC */
	vmmc-supply = <&vdd_mmc1>;
	vqmmc-supply = <&vdd_sd_dv_alt>;
	pinctrl-names = "default";
	pinctrl-0 = <&main_mmc1_pins_default>;
	ti,driver-strength-ohm = <50>;
	disable-wp;
};

&main_sdhci2 {
	/* Unused */
	status = "disabled";
};

&usb_serdes_mux {
	idle-states = <1>, <1>; /* USB0 to SERDES3, USB1 to SERDES2 */
};

&serdes_ln_ctrl {
	idle-states = <J721E_SERDES0_LANE0_PCIE0_LANE0>, <J721E_SERDES0_LANE1_PCIE0_LANE1>,
		      <J721E_SERDES1_LANE0_PCIE1_LANE0>, <J721E_SERDES1_LANE1_PCIE1_LANE1>,
		      <J721E_SERDES2_LANE0_IP1_UNUSED>, <J721E_SERDES2_LANE1_USB3_1>,
		      <J721E_SERDES3_LANE0_USB3_0_SWAP>, <J721E_SERDES3_LANE1_USB3_0>,
		      <J721E_SERDES4_LANE0_EDP_LANE0>, <J721E_SERDES4_LANE1_EDP_LANE1>,
		      <J721E_SERDES4_LANE2_EDP_LANE2>, <J721E_SERDES4_LANE3_EDP_LANE3>;
};

&serdes_wiz3 {
	typec-dir-gpios = <&main_gpio1 3 GPIO_ACTIVE_LOW>;
	typec-dir-debounce-ms = <700>;	/* TUSB321, tCCB_DEFAULT 133 ms */
};

&serdes3 {
	serdes3_usb_link: phy@0 {
		reg = <0>;
		cdns,num-lanes = <2>;
		#phy-cells = <0>;
		cdns,phy-type = <PHY_TYPE_USB3>;
		resets = <&serdes_wiz3 1>, <&serdes_wiz3 2>;
	};
};

&usbss0 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_usbss0_pins_default>;
	ti,vbus-divider;
};

&usb0 {
	dr_mode = "otg";
	maximum-speed = "super-speed";
	phys = <&serdes3_usb_link>;
	phy-names = "cdns3,usb3-phy";
};

&serdes2 {
	serdes2_usb_link: phy@1 {
		reg = <1>;
		cdns,num-lanes = <1>;
		#phy-cells = <0>;
		cdns,phy-type = <PHY_TYPE_USB3>;
		resets = <&serdes_wiz2 2>;
	};
};

&usbss1 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_usbss1_pins_default>;
	ti,vbus-divider;
};

&usb1 {
	dr_mode = "host";
	maximum-speed = "super-speed";
	phys = <&serdes2_usb_link>;
	phy-names = "cdns3,usb3-phy";
};

&tscadc0 {
	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
	};
};

&tscadc1 {
	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
	};
};

&wkup_i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&wkup_i2c0_pins_default &eeprom_wp_pins_default>;
	clock-frequency = <400000>;

	eeprom@50 {
		compatible = "atmel,24c04";
		reg = <0x50>;
	};
};

&main_i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c0_pins_default>;
	clock-frequency = <400000>;
};

&main_i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c1_pins_default &csi1_gpio_pins_default>;
	clock-frequency = <400000>;

#if 1
	ov5640_1: camera1@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;

		clocks = <&clk_ov5640_fixed>;
		clock-names = "xclk";
		powerdown-gpios = <&main_gpio0 101 GPIO_ACTIVE_LOW>;
		reset-gpios = <&main_gpio0 107 GPIO_ACTIVE_LOW>;

		port {
			csi2rx1_cam0: endpoint {
				remote-endpoint = <&csi2rx1_in_sensor>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
			};
		};
	};
#else
	ov5647_1: camera1@36 {
		compatible = "ovti,ov5647";
		reg = <0x36>;

		clocks = <&clk_ov5640_fixed>;
		clock-names = "xclk";
		powerdown-gpios = <&main_gpio0 101 GPIO_ACTIVE_LOW>;
		reset-gpios = <&main_gpio0 107 GPIO_ACTIVE_LOW>;

		port {
			csi2rx1_cam0: endpoint {
				remote-endpoint = <&csi2rx1_in_sensor>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
			};
		};
	};
#endif

	tusb322@47 {
		compatible = "ti,tusb322";
		reg = <0x47>;
		pinctrl-0 = <&tusb322_pins_default>;
		interrupt-parent = <&main_gpio1>;
		interrupts = <4 IRQ_TYPE_EDGE_FALLING>;
		interrupt-controller;
		#interrupt-cells = <2>;
	};
};

bone_i2c_2: &main_i2c3 {
	symlink = "bone/i2c/2";
};

&main_i2c3 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c3_pins_default>;
	clock-frequency = <400000>;
};

&main_i2c5 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c5_pins_default &csi0_gpio_pins_default>;
	clock-frequency = <400000>;

#if 1
	ov5640: camera@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;

		clocks = <&clk_ov5640_fixed>;
		clock-names = "xclk";
		powerdown-gpios = <&main_gpio0 103 GPIO_ACTIVE_LOW>;
		reset-gpios = <&main_gpio0 102 GPIO_ACTIVE_LOW>;

		port {
			csi2rx0_cam0: endpoint {
				remote-endpoint = <&csi2rx0_in_sensor>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
			};
		};
	};
#else
	ov5647: camera1@36 {
		compatible = "ovti,ov5647";
		reg = <0x36>;

		clocks = <&clk_ov5640_fixed>;
		clock-names = "xclk";
		powerdown-gpios = <&main_gpio0 101 GPIO_ACTIVE_LOW>;
		reset-gpios = <&main_gpio0 107 GPIO_ACTIVE_LOW>;

		port {
			csi2rx0_cam0: endpoint {
				remote-endpoint = <&csi2rx0_in_sensor>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
			};
		};
	};
#endif
};

&main_spi6 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_spi6_pins_default>;
	ti,spi-num-cs = <2>;
	ti,pindir-d0-out-d1-in;

	spidev0: spidev@0{
		compatible = "spidev";
		reg = <0>;	/* CE0 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <125000000>;
	};

	spidev1: spidev@1{
		compatible = "spidev";
		reg = <1>;	/* CE1 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <125000000>;
	};
};

bone_i2c_1: &main_i2c6 {
	symlink = "bone/i2c/1";
};

&mcu_cpsw {
	pinctrl-names = "default";
	pinctrl-0 = <&mcu_cpsw_pins_default &mcu_mdio_pins_default>;
};

&davinci_mdio {
	phy0: ethernet-phy@0 {
		reg = <0>;
		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
	};
};

&cpsw_port1 {
	phy-mode = "rgmii-rxid";
	phy-handle = <&phy0>;
};

&dss {
	/*
	 * These clock assignments are chosen to enable the following outputs:
	 *
	 * VP0 - DisplayPort SST
	 * VP1 - DPI0
	 * VP2 - DSI
	 * VP3 - DPI1
	 */

	assigned-clocks = <&k3_clks 152 1>,
				<&k3_clks 152 4>,
				<&k3_clks 152 9>,
				<&k3_clks 152 13>;
	assigned-clock-parents = <&k3_clks 152 2>,	/* PLL16_HSDIV0 */
				<&k3_clks 152 6>,	/* PLL19_HSDIV0 */
				<&k3_clks 152 11>,	/* PLL18_HSDIV0 */
				<&k3_clks 152 18>;	/* PLL23_HSDIV0 */
};

&dss_ports {
	port@0 {
		reg = <0>;

		dpi0_out: endpoint {
			remote-endpoint = <&dp0_in>;
		};
	};
};

&mhdp {
	pinctrl-names = "default";
	pinctrl-0 = <&dp0_pins_default>;
};

&dp0_ports {
	#address-cells = <1>;
	#size-cells = <0>;

	port@0 {
		reg = <0>;
		dp0_in: endpoint {
			remote-endpoint = <&dpi0_out>;
		};
	};

	port@4 {
		reg = <4>;
		dp0_out: endpoint {
			remote-endpoint = <&dp_connector_in>;
		};
	};
};

&mcasp0 {
	status = "disabled";
};

&mcasp1 {
	status = "disabled";
};

&mcasp2 {
	status = "disabled";
};

&mcasp3 {
	status = "disabled";
};

&mcasp4 {
	status = "disabled";
};

&mcasp5 {
	status = "disabled";
};

&mcasp6 {
	status = "disabled";
};

&mcasp7 {
	status = "disabled";
};

&mcasp8 {
	status = "disabled";
};

&mcasp9 {
	status = "disabled";
};

&mcasp10 {
	status = "disabled";
};

&mcasp11 {
	status = "disabled";
};

&serdes0 {
	serdes0_pcie_link: phy@0 {
		reg = <0>;
		cdns,num-lanes = <1>;
		#phy-cells = <0>;
		cdns,phy-type = <PHY_TYPE_PCIE>;
		resets = <&serdes_wiz0 1>;
	};
};

&serdes1 {
	serdes1_pcie_link: phy@0 {
		reg = <0>;
		cdns,num-lanes = <2>;
		#phy-cells = <0>;
		cdns,phy-type = <PHY_TYPE_PCIE>;
		resets = <&serdes_wiz1 1>, <&serdes_wiz1 2>;
	};
};

&pcie0_rc {
	status = "disabled";
};

&pcie1_rc {
	pinctrl-names = "default";
	pinctrl-0 = <&pcie1_rst_pins_default>;
	phys = <&serdes1_pcie_link>;
	phy-names = "pcie-phy";
	num-lanes = <2>;
	max-link-speed = <3>;
	reset-gpios = <&main_gpio0 22 GPIO_ACTIVE_HIGH>;
};

&pcie2_rc {
	status = "disabled";
};

&pcie0_ep {
	phys = <&serdes0_pcie_link>;
	phy-names = "pcie-phy";
	num-lanes = <1>;
	status = "disabled";
};

&pcie1_ep {
	phys = <&serdes1_pcie_link>;
	phy-names = "pcie-phy";
	num-lanes = <2>;
	status = "disabled";
};

&pcie2_ep {
	status = "disabled";
};

&pcie3_rc {
	status = "disabled";
};

&pcie3_ep {
	status = "disabled";
};

bone_uart_6: &main_uart2 {
	status = "okay";
	symlink = "bone/uart/6";
};

&mcu_mcan0 {
	status = "disabled";
};

&mcu_mcan1 {
	status = "disabled";
};

&main_mcan0 {
	status = "disabled";
};

&main_mcan1 {
	status = "disabled";
};

&main_mcan2 {
	status = "disabled";
};

&main_mcan3 {
	status = "disabled";
};

&main_mcan4 {
	status = "disabled";
};

&main_mcan5 {
	status = "disabled";
};

&main_mcan6 {
	status = "disabled";
};

&main_mcan7 {
	status = "disabled";
};

&main_mcan8 {
	status = "disabled";
};

&main_mcan9 {
	status = "disabled";
};

&main_mcan10 {
	status = "disabled";
};

&main_mcan11 {
	status = "disabled";
};

&main_mcan12 {
	status = "disabled";
};

&main_mcan13 {
	status = "disabled";
};

&ufs_wrapper {
	status = "disabled";
};

&csi0_port0 {
	csi2rx0_in_sensor: endpoint {
		remote-endpoint = <&csi2rx0_cam0>;
		bus-type = <4>; /* CSI2 DPHY. */
		clock-lanes = <0>;
		data-lanes = <1 2>;
	};
};

&csi0_port1 {
	status = "disabled";
};

&csi0_port2 {
	status = "disabled";
};

&csi0_port3 {
	status = "disabled";
};

&csi0_port4 {
	status = "disabled";
};

&csi1_port0 {
	csi2rx1_in_sensor: endpoint {
		remote-endpoint = <&csi2rx1_cam0>;
		bus-type = <4>; /* CSI2 DPHY. */
		clock-lanes = <0>;
		data-lanes = <1 2>;
	};
};

&csi1_port1 {
	status = "disabled";
};

&csi1_port2 {
	status = "disabled";
};

&csi1_port3 {
	status = "disabled";
};

&csi1_port4 {
	status = "disabled";
};
